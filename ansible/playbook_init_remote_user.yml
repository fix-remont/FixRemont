############### повторяющаяся шапка
- name: Read .env file and create user
  hosts: localhost
  gather_facts: false
  tasks:
    - name: set variables from .env to facts
      ansible.builtin.include_tasks: tasks/set__env_vars__from_.env.yml

- name: Use parsed .env variables on remote host
  hosts: remote-staging-admin
  gather_facts: false
  tasks:
    - name: Pass variables to remote host
      set_fact:
        remote_env_vars: "{{ hostvars['localhost']['env_vars'] }}"
    ###################################

    - name: update apt cache
      ansible.builtin.apt:
        update_cache: true

    - name: Create user from ENV_MODE variable
      ansible.builtin.user:
        name: "{{ remote_env_vars['ENV_MODE'] }}"
        state: present
        shell: /bin/bash
      become: true

    - name: Add user to sudo group (for Ubuntu/Debian)
      ansible.builtin.user:
        name: "{{ remote_env_vars['ENV_MODE'] }}"
        groups: sudo
        append: yes
      become: true

    - name: Ensure user can run sudo without password
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ remote_env_vars['ENV_MODE'] }}"
        content: "{{ remote_env_vars['ENV_MODE'] }} ALL=(ALL) NOPASSWD: ALL"
        mode: '0440'
      become: true

    - name: ensure .ssh directory
      ansible.builtin.file:
        path: "/home/{{ remote_env_vars['ENV_MODE'] }}/.ssh" # исправлено на remote_env_vars
        state: directory
      become: true

    - name: ensure authorized_keys file
      ansible.builtin.copy:
        src: '/home/g/.ssh/id_rsa.pub'
        dest: "/home/{{remote_env_vars['ENV_MODE']}}/.ssh/authorized_keys"
      become: true
